<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/secure/auth/denied" >
	
		<security:intercept-url pattern="/secure/auth/login" access="permitAll"/>
		<security:intercept-url pattern="/secure/main/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/secure/main/employee" access="hasRole('ROLE_BNK_EMPL')"/>
		<security:intercept-url pattern="/secure/main/customer" access="hasRole('ROLE_CUST')"/>
		<security:intercept-url pattern="/secure/main/merchant" access="hasRole('ROLE_MERC')"/>
		
		<security:form-login
				login-page="/secure/auth/login"
				authentication-failure-url="/secure/auth/login?error=true" 
				default-target-url="/secure/main/common"/>
			
		<!-- <security:logout 
				invalidate-session="true" 
				logout-success-url="/krams/auth/login" 
				logout-url="/krams/main/logout"/> -->
				
				<security:logout 
				invalidate-session="true" 
				logout-success-url="/secure/auth/login" 
				/>

				<!-- enable csrf protection -->
				<security:csrf/>
	</security:http>
	
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="customUserDetailsService">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<bean id="customUserDetailsService" class="edu.asu.secure.SynnovationBank.ServiceImpl.CustomUserDetailsServiceImpl"/>
	
</beans>
